export TOKEN=$(kubectl describe secret $(kubectl get secret | awk '/^dashboard-token-/{print $1}') | awk '$1=="token:"{print $2}') && echo -e "\n--- Copy and paste this token for dashboard access --\n$TOKEN\n---"

microk8s enable prometheus
kubectl apply -f misc/promOperator/service-prometheus.yaml 
kubectl apply -f misc/promOperator/servicemonitor-fibservice.yaml 
kubectl apply -f misc/promOperator/prometheus-svc.yaml 

kubectl get secret grafana-datasources -n monitoring -o jsonpath --template '{.data.datasources\.yaml}' | base64 -d

# Ingress
microk8s enable ingress
kubectl apply -f misc/promOperator/promIngress.yml
kubectl get ingress monitoring -n monitoring
curl -kL http://127.0.0.1/graph

# Federate
curl -kLG --data-urlencode 'match[]={__name__="http_request_duration_seconds_count"}' https://127.0.0.1/federate
curl -kLG --data-urlencode 'match[]=~{__name__=".*http_requests_fibservice.*"}' https://127.0.0.1/federate

# Rules
kubectl apply -f misc/promOperator/service-prom-alert-rules.yaml
kubectl apply -f misc/promOperator/service-prom-rec-rules.yaml 


# Gets
kubectl get services -n monitoring
kubectl get service prometheus-k8s -n monitoring
kubectl get service grafana -n monitoring 

kubectl get pods
kubectl get pods -n monitoring

kubectl get service fibservice -o yaml | less
kubectl get service fibservice
